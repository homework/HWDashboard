(function() {
  var DASHBOARD_PORT, LOG_LEVEL, dd, state_builder;
  LOG_LEVEL = 5;
  DASHBOARD_PORT = 80;
  dd = require('./dummydata').dummy_data;
  state_builder = require('./statebuilder').statebuilder;
  console.log(state_builder.dateQuery(dd[0]));
  "state =\n    household:\n                usage: 101010100,\n                allowance: 10000000000\n\n    users:      [\n                  {\n                    id : 5,\n                    name: \"Mum Smith\",\n                    usage: 3012312000,\n                    allowance: 50000000000\n                  },\n                  {\n                    id : 7,\n                    name: \"Dad Smith\",\n                    usage: 4012312000,\n                    allowance: 100000000000\n                  }\n                ],\n\n    devices:    [\n                  {\n                    id: 1,\n                    name: \"mac\",\n                    usage: 4012312000,\n                    allowance: 10000000000\n                  },\n                  {\n                    id: 4,\n                    name: \"nbk\",\n                    usage: 4012312000,\n                    allowance: 112000000000\n                  }\n                ]\n\nHWDashboardLogger = require('./logger').logger\nlog = new HWDashboardLogger \"hwdbdashboard\", LOG_LEVEL\n\nlog.notice \"Starting HWDashboard\"\n\nstats_jsrpc = require('./jsrpc').jsrpc\nnow_app     = require('now')\nexpress     = require('express')\n\nrest_server = express.createServer()\nio_server   = now_app.initialize(rest_server)\n\nrest_server.configure( ->\n  rest_server.use express.static(__dirname + '/../public')\n  rest_server.use(express.bodyParser())\n)\n\nio_server.now.serverOutput = (data) ->\n  console.log(data)\n\nstats_jsrpc.connect()\nstats_jsrpc.query(\"SQL:select * from BWUsage \")\n\nstats_jsrpc.on('message', (data) ->\n  console.log data\n#  io_server.now.bandwidthUpdate(data)\n)\n\nstats_jsrpc.on('timedout', ->\n  log.error \"JSRPC timed out, process exiting\"\n  process.exit(1)\n)\n\nlog.info \"JSRPC setup executed\"\n\nrest_server.get('/*', (req, res) ->\n    res.sendfile('../public/index.html', (err) ->\n      console.log err\n    )\n)\n\nif !module.parent\n  rest_server.listen(DASHBOARD_PORT, ->\n    addr = rest_server.address()\n  )\n  log.notice \"Dashboard server listening on port \" + DASHBOARD_PORT\n  process.on 'SIGINT', ->\n    stats_jsrpc.disconnect()\n    stats_jsrpc.on 'disconnected', ->\n      log.notice \"HWDashboard killed by SIGINT, exited gracefully\"\n      process.exit(0)\n    process.exit(0)";
}).call(this);
